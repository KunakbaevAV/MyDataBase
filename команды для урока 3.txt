-- Комментирую минусами, потому что использую punto switcher, который переключает раскладку клавиатуры.
-- при этом минусы остаются, а решетка меняется на №
-- так что мне так удобнее)



-- База данных «Страны и города мира»

-- 1. Сделать запрос, в котором мы выберем все данные о городе – регион, страна.
SELECT `_cities`.`title`, `_regions`.`title`, `_countries`.`title`
FROM first_data_base._cities
LEFT JOIN `_regions`
ON `_regions`.`id` = `_cities`.`region_id`
LEFT JOIN `_countries`
ON `_countries`.`id` = `_regions`.`country_id`
WHERE `_cities`.`id` = 1;

-- 2. Выбрать все города из Московской области.
-- поменял только одну строчку
SELECT `_cities`.`title`, `_regions`.`title`, `_countries`.`title`
FROM first_data_base._cities
LEFT JOIN `_regions`
ON `_regions`.`id` = `_cities`.`region_id`
LEFT JOIN `_countries`
ON `_countries`.`id` = `_regions`.`country_id`
WHERE `_regions`.`title` = 'Московская область';



-- База данных «Сотрудники»:

-- Времени мало, так что копирую структуру из урока.
CREATE DATABASE IF NOT EXISTS `lesson3` 
DEFAULT CHAR SET utf8mb4 COLLATE utf8mb4_unicode_ci;
USE `lesson3`;

CREATE TABLE IF NOT EXISTS `depart` (
`id` INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
`name` VARCHAR(40) NOT NULL,
`count` INT DEFAULT 0,
`head_id` INT
);

CREATE TABLE IF NOT EXISTS `shtat` (
`id` INT NOT NULL AUTO_INCREMENT,
`name` VARCHAR(25) NOT NULL,
`lastname` VARCHAR(30) NOT NULL,
`dept` INT,
`position` VARCHAR(40),
`salary` INT,
PRIMARY KEY (`id`)
)DEFAULT CHAR SET utf8mb4 COLLATE utf8mb4_unicode_ci;

-- Заполняю данными
INSERT INTO `depart` 
(`name`) VALUES 
('Охрана'),
('Маркетинг'),
('Реклама'),
('Юристы'),
('Программисты'),
('Отдел кадров');

INSERT INTO `shtat` 
(`name`, `lastname`, `dept`, `position`, `salary`) VALUES 
('Иван', 'Васильков', 1, NULL, 50000),
('Василий', 'Чумазый', 1, NULL, 46000),
('Петр', 'Красилов', 2, NULL, 45000),
('Макар', 'Звонкий', 3, NULL, 55000),
('Мария', 'Ленивая', 5, 'Уборщица', 35000),
('Артем', 'Кунакбаев', 6, 'Ведущий программист', 95000),
('Дмитрий', 'Веселый', 6, 'Инженер', 105000),
('Антон', 'Бескровный', 6, NULL, 105000),
('Ирина', 'Кудрявая', 7, 'Делопроизводитель', 35000);

-- 1. Выбрать среднюю зарплату по отделам.
SELECT `depart`.`name` AS 'Отдел', AVG(shtat.salary) AS 'Средняя зарплата' FROM shtat 
LEFT JOIN depart
ON depart.id = shtat.dept
GROUP BY shtat.dept

-- 2. Выбрать максимальную зарплату у сотрудника.
SELECT `name`, `lastname`, `position`, `salary` FROM shtat 
ORDER BY `salary` DESC LIMIT 1

-- 3. Удалить одного сотрудника, у которого максимальная зарплата.
DELETE FROM shtat WHERE `id` = (SELECT * FROM
(SELECT `id` FROM `shtat` ORDER BY `salary` DESC LIMIT 1) AS `temp`)

-- 4. Посчитать количество сотрудников во всех отделах.
SELECT 
`depart`.`name` AS 'Отдел', 
COUNT(*) AS 'Всего  сотрудников'  
FROM `shtat` 
LEFT JOIN `depart`
ON `depart`.`id` = `shtat`.`dept`
GROUP BY `shtat`.`dept`

-- 5. Найти количество сотрудников в отделах и посмотреть, сколько всего денег получает отдел.
SELECT 
`depart`.`name` AS 'Отдел', 
COUNT(*) AS 'Всего сотрудников',
SUM(`shtat`.`salary`) AS 'Общая зарплата'
FROM `shtat` 
LEFT JOIN `depart`
ON `depart`.`id` = `shtat`.`dept`
GROUP BY `shtat`.`dept` 
